name: Deploy Release Candidate To Production

on:
  workflow_dispatch:
    inputs:
      release_number:
        description: "Release Number"
        required: true

jobs:
  deploy_master_to_production:
    runs-on: ubuntu-latest

    steps:
      - name: Init git
        with:
          fetch-depth: 0
        uses: actions/checkout@v2
      - name: Check only 1 PR Matches Release Candidate Criteria
        run: |
          release_candidate_pull_request_count=$(gh search prs --repo ${{ github.repository }} --base master --label 'release-candidate' --state="open" --json number --jq 'length' 'Release Candidate v${{ github.event.inputs.release_number }}')
          if [ $release_candidate_pull_request_count -gt 1 ]
          then
            echo More than 1 PR matches Release Candidate Criteria - There are $release_candidate_pull_request_count PRs
            exit 1
          elif [ $release_candidate_pull_request_count -lt 1 ] 
          then 
            echo There is no PR that matches Release Candidate Criteria 
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Find Release Candidate PR Number
        run: echo "pull_request_number=$(gh search prs --repo ${{ github.repository }} --base master --label 'release-candidate' --state="open" --limit 1 --json number --jq '.[].number' 'Release Candidate v${{ github.event.inputs.release_number }}')" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Log PR information
        run: echo PR link ${{ github.server_url }}/${{ github.repository }}/pull/${{ env.pull_request_number }}
      - name: Check PR is mergeable
        run: |
          isMergeable=$(gh pr view ${{ env.pull_request_number }} --json 'mergeable' --jq '.mergeable | all(. == "SUCCESS"))
          if [ $isMergeable = false ]
          then
            echo PR is not mergeable 
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check PR checks are success
        run: |
          someCheckFailed=$(gh pr view ${{ env.pull_request_number }} --json 'statusCheckRollup' --jq '[.[] | .[] | .state ] | all(["FAILURE"])')
          if [ $someCheckFailed = true ]
          then
            echo At least a check failed for this PR, aborting 
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Merge Release Candidate to Master
        run: gh pr merge ${{ env.pull_request_number }} -m --delete-branch --subject "Merge Release Candidate v${{ github.event.inputs.release_number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout out last commit on Master
        with:
          ref: master
          fetch-depth: 0
        uses: actions/checkout@v2
      - name: Get current date
        id: date
        run: echo "date_time=$(date +'%Y-%m-%d--%H-%M')" >> $GITHUB_ENV
      - name: Tag/Deploy master to production
        run: |
          git tag automation_v${{ github.event.inputs.release_number }}_${{ env.date_time }}
          git push origin automation_v${{ github.event.inputs.release_number }}_${{ env.date_time }}

  create_merge_back:
    needs: deploy_master_to_production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout develop
        with:
          fetch-depth: 0
          ref: develop
        uses: actions/checkout@v2
      - name: Create mergeback branch
        run: git checkout -b mergeback/master-v${{ github.event.inputs.release_number }}
      - name: Push Merbeback With No master merge
        run: git push origin mergeback/master-v${{ github.event.inputs.release_number }}
      - name: Merge Master
        run: gh pr create -B develop --title "Merge Back Release Candidate v${{ github.event.inputs.release_number }}" --body '' --label 'merge-back'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Merge Master to Mergeback Branch
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: master
          target_branch: mergeback/master-v${{ github.event.inputs.release_number }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
